"use client";

import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";
import { marketplaceItems } from "@/lib/marketplace-types";
import { AuctionOption } from "@/lib/database-types";
import { useLanguage } from "@/lib/i18n/LanguageContext";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { useToast } from "@/hooks/use-toast";
import ReactMarkdown from "@/components/ReactMarkdown";
import {
  ArrowLeft,
  ArrowUpRight,
  Calendar,
  DollarSign,
  Mail,
  Timer,
  Users,
  User,
} from "lucide-react";
import { getFakeBidData, maskEmail } from "@/lib/utils/fake-bids";
import { Badge } from "@/components/ui/badge";
import { Language } from "@/lib/i18n/translations";
import { Icons } from "@/components/icons";

// Detailed descriptions for each marketplace item in different languages
const detailedDescriptions: Record<string, Record<Language, string>> = {
  "case-404": {
    en: `**What the AI does:** Posts evidence (photos, chat dialogues, audio) and suspects\n
**Users:** Vote on who to interrogate / what to check\n
**Unique feature:** Inside the bot are personal "cases" of participants: those who guess correctly get points, ranks "Detective of the day"\n
**Revenue:** Paid "expert hints" from AI\n`,
    uk: `**–©–æ —Ä–æ–±–∏—Ç—å –®–Ü:** –ü—É–±–ª—ñ–∫—É—î –¥–æ–∫–∞–∑–∏ (—Ñ–æ—Ç–æ, –¥—ñ–∞–ª–æ–≥–∏-—á–∞—Ç, –∞—É–¥—ñ–æ) —Ç–∞ –ø—ñ–¥–æ–∑—Ä—é–≤–∞–Ω–∏—Ö\n
**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:** –ì–æ–ª–æ—Å—É—é—Ç—å, –∫–æ–≥–æ –¥–æ–ø–∏—Ç–∞—Ç–∏ / —â–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏\n
**–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:** –í—Å–µ—Ä–µ–¥–∏–Ω—ñ –±–æ—Ç–∞ –æ—Å–æ–±–∏—Å—Ç—ñ ¬´—Å–ø—Ä–∞–≤–∏¬ª —É—á–∞—Å–Ω–∏–∫—ñ–≤: —Ö—Ç–æ –≤–≥–∞–¥–∞–≤ ‚Äî –æ—Ç—Ä–∏–º—É—î –æ—á–∫–∏, —Ä–∞–Ω–≥–∏ ¬´–î–µ—Ç–µ–∫—Ç–∏–≤ –¥–Ω—è¬ª\n
**–î–æ—Ö—ñ–¥:** –ü–ª–∞—Ç–Ω—ñ ¬´–µ–∫—Å–ø–µ—Ä—Ç–Ω—ñ –ø—ñ–¥–∫–∞–∑–∫–∏¬ª –≤—ñ–¥ –®–Ü\n`,
    ru: `**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ò–ò:** –ü–æ—Å—Ç–∏—Ç —É–ª–∏–∫–∏ (—Ñ–æ—Ç–æ, –¥–∏–∞–ª–æ–≥–∏-—á–∞—Ç, –∞—É–¥–∏–æ) –∏ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã—Ö\n
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –ì–æ–ª–æ—Å—É—é—Ç, –∫–æ–≥–æ –¥–æ–ø—Ä–æ—Å–∏—Ç—å / —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å\n
**–ò–∑—é–º–∏–Ω–∫–∞:** –í–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞ –ª–∏—á–Ω—ã–µ ¬´–¥–µ–ª–∞¬ª —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –∫—Ç–æ —É–≥–∞–¥–∞–ª ‚Äî –ø–æ–ª—É—á–∞–µ—Ç –æ—á–∫–∏, —Ä–∞–Ω–≥–∏ ¬´–°—ã—â–∏–∫ –¥–Ω—è¬ª\n
**–î–æ—Ö–æ–¥:** –ü–ª–∞—Ç–Ω—ã–µ ¬´—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏¬ª –æ—Ç –ò–ò\n`,
    es: `**Qu√© hace la IA:** Publica evidencias (fotos, di√°logos de chat, audio) y sospechosos\n
**Usuarios:** Votan a qui√©n interrogar / qu√© verificar\n
**Caracter√≠stica √∫nica:** Dentro del bot hay "casos" personales de los participantes: quienes adivinan correctamente obtienen puntos, rangos "Detective del d√≠a"\n
**Ingresos:** "Pistas expertas" pagas de la IA\n`
  },
  "exchange-2077": {
    en: `**What the AI does:** Models a virtual market for tokens of future companies. Posts news daily; through üòäüòêüò± reactions, players "buy" or "sell".\n
**Users:** Trade virtual assets and participate in weekly rankings\n
**Unique feature:** Bot maintains portfolios and weekly rankings\n
**Revenue:** Paid analytics and NFT achievements`,
    
    uk: `**–©–æ —Ä–æ–±–∏—Ç—å –®–Ü:** –ú–æ–¥–µ–ª—é—î –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π —Ä–∏–Ω–æ–∫ —Ç–æ–∫–µ–Ω—ñ–≤ –∫–æ–º–ø–∞–Ω—ñ–π –∑ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ. –†–∞–∑ –Ω–∞ –¥–µ–Ω—å –ø—É–±–ª—ñ–∫—É—î –Ω–æ–≤–∏–Ω–∏; —á–µ—Ä–µ–∑ —Ä–µ–∞–∫—Ü—ñ—ó üòäüòêüò± –≥—Ä–∞–≤—Ü—ñ "–∫—É–ø—É—é—Ç—å" –∞–±–æ "–ø—Ä–æ–¥–∞—é—Ç—å".\n
**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:** –¢–æ—Ä–≥—É—é—Ç—å –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ —Ç–∞ –±–µ—Ä—É—Ç—å —É—á–∞—Å—Ç—å —É —â–æ—Ç–∏–∂–Ω–µ–≤–∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö\n
**–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:** –ë–æ—Ç –≤–µ–¥–µ –ø–æ—Ä—Ç—Ñ–µ–ª—ñ —Ç–∞ —â–æ—Ç–∏–∂–Ω–µ–≤—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏\n
**–î–æ—Ö—ñ–¥:** –ü–ª–∞—Ç–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ —Ç–∞ NFT-–¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è`,
    
    ru: `**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ò–ò:** –ú–æ–¥–µ–ª–∏—Ä—É–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤ –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ –±—É–¥—É—â–µ–≥–æ. –†–∞–∑ –≤ –¥–µ–Ω—å –ø–æ—Å—Ç–∏—Ç –Ω–æ–≤–æ—Å—Ç–∏; —á–µ—Ä–µ–∑ —Ä–µ–∞–∫—Ü–∏–∏ üòäüòêüò± –∏–≥—Ä–æ–∫–∏ "–ø–æ–∫—É–ø–∞—é—Ç" –∏–ª–∏ "–ø—Ä–æ–¥–∞—é—Ç".\n
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –¢–æ—Ä–≥—É—é—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ –∏ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö\n
**–ò–∑—é–º–∏–Ω–∫–∞:** –ë–æ—Ç –≤–µ–¥—ë—Ç –ø–æ—Ä—Ç—Ñ–µ–ª–∏ –∏ weekly-rank\n
**–î–æ—Ö–æ–¥:** –ü–ª–∞—Ç–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ NFT-–∞—á–∏–≤–∫–∏`,
    
    es: `**Qu√© hace la IA:** Modela un mercado virtual de tokens de empresas del futuro. Publica noticias diariamente; a trav√©s de reacciones üòäüòêüò±, los jugadores "compran" o "venden".\n
**Usuarios:** Comercian con activos virtuales y participan en rankings semanales\n
**Caracter√≠stica √∫nica:** El bot mantiene carteras y rankings semanales\n
**Ingresos:** An√°lisis pagos y logros NFT`
  },
  "meme-forge": {
    en: `**What the AI does:** Publishes meme templates (image + empty caption). Subscribers vote for the punchline.\n
**Users:** Vote on captions and participate in author battles\n
**Unique feature:** The winning text is embedded by AI to produce the final meme post. Weekly "author battles" with donations to the prize fund.\n
**Revenue:** Donations to prize funds for competitions`,
    
    uk: `**–©–æ —Ä–æ–±–∏—Ç—å –®–Ü:** –ü—É–±–ª—ñ–∫—É—î –∫–∞—Ä–∫–∞—Å–∏ –º–µ–º—ñ–≤ (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è + –ø–æ—Ä–æ–∂–Ω—ñ–π –ø—ñ–¥–ø–∏—Å). –ü—ñ–¥–ø–∏—Å–Ω–∏–∫–∏ –≥–æ–ª–æ—Å—É—é—Ç—å –∑–∞ –Ω–∞–π–∫—Ä–∞—â—É —Ñ—Ä–∞–∑—É.\n
**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:** –ì–æ–ª–æ—Å—É—é—Ç—å –∑–∞ –ø—ñ–¥–ø–∏—Å–∏ —Ç–∞ –±–µ—Ä—É—Ç—å —É—á–∞—Å—Ç—å —É –±–∞—Ç–ª–∞—Ö –∞–≤—Ç–æ—Ä—ñ–≤\n
**–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:** –¢–µ–∫—Å—Ç-–ø–µ—Ä–µ–º–æ–∂–µ—Ü—å –®–Ü –≤–±—É–¥–æ–≤—É—î —Ç–∞ –≤–∏–ø—É—Å–∫–∞—î —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ–º-–ø–æ—Å—Ç. –©–æ—Ç–∏–∂–Ω–µ–≤—ñ "–±–∞—Ç–ª–∏ –∞–≤—Ç–æ—Ä—ñ–≤" –∑ –¥–æ–Ω–∞—Ç–∞–º–∏ —É –ø—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥.\n
**–î–æ—Ö—ñ–¥:** –î–æ–Ω–∞—Ç–∏ —É –ø—Ä–∏–∑–æ–≤—ñ —Ñ–æ–Ω–¥–∏ –¥–ª—è –∑–º–∞–≥–∞–Ω—å`,
    
    ru: `**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ò–ò:** –ü—É–±–ª–∏–∫—É–µ—Ç –∫–∞—Ä–∫–∞—Å –º–µ–º–∞ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + –ø—É—Å—Ç–∞—è –ø–æ–¥–ø–∏—Å—å). –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –≥–æ–ª–æ—Å—É—é—Ç –∑–∞ punchline.\n
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –ì–æ–ª–æ—Å—É—é—Ç –∑–∞ –ø–æ–¥–ø–∏—Å–∏ –∏ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –±–∞—Ç—Ç–ª–∞—Ö –∞–≤—Ç–æ—Ä–æ–≤\n
**–ò–∑—é–º–∏–Ω–∫–∞:** –ü–æ–±–µ–¥–∏–≤—à–∏–π —Ç–µ–∫—Å—Ç –ò–ò –≤—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤—ã–ø—É—Å–∫–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –º–µ–º-–ø–æ—Å—Ç. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ "–±–∞—Ç—Ç–ª—ã –∞–≤—Ç–æ—Ä–æ–≤" —Å –¥–æ–Ω–∞—Ç–∞–º–∏ –≤ –ø—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥.\n
**–î–æ—Ö–æ–¥:** –î–æ–Ω–∞—Ç—ã –≤ –ø—Ä–∏–∑–æ–≤—ã–µ —Ñ–æ–Ω–¥—ã –¥–ª—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π`,
    
    es: `**Qu√© hace la IA:** Publica plantillas de memes (imagen + leyenda vac√≠a). Los suscriptores votan por el remate.\n
**Usuarios:** Votan por las leyendas y participan en batallas de autores\n
**Caracter√≠stica √∫nica:** El texto ganador es incorporado por la IA para producir el meme final. Batallas semanales de autores con donaciones al fondo de premios.\n
**Ingresos:** Donaciones a fondos de premios para competiciones`
  },
  "pet-tamago": {
    en: `**What the AI does:** Describes the pet's mood, offers 3 actions (feed, play, train).\n
**Users:** Make decisions about the pet's care, which affects its evolution\n
**Unique feature:** Chat decides the actions, and the pet evolves accordingly. Reactions highlight "caring" participants.\n
**Revenue:** Unique pet stickers for sale`,
    
    uk: `**–©–æ —Ä–æ–±–∏—Ç—å –®–Ü:** –û–ø–∏—Å—É—î –Ω–∞—Å—Ç—Ä—ñ–π –∑–≤—ñ—Ä—è—Ç–∫–∞, –¥–∞—î 3 –¥—ñ—ó (–≥–æ–¥—É–≤–∞—Ç–∏, –≥—Ä–∞—Ç–∏, —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏).\n
**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:** –ü—Ä–∏–π–º–∞—é—Ç—å —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ –¥–æ–≥–ª—è–¥—É –∑–∞ –≤–∏—Ö–æ–≤–∞–Ω—Ü–µ–º, —â–æ –≤–ø–ª–∏–≤–∞—î –Ω–∞ –π–æ–≥–æ –µ–≤–æ–ª—é—Ü—ñ—é\n
**–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:** –ß–∞—Ç –≤–∏—Ä—ñ—à—É—î –¥—ñ—ó, —ñ –≤–∏—Ö–æ–≤–∞–Ω–µ—Ü—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –µ–≤–æ–ª—é—Ü—ñ–æ–Ω—É—î. –†–µ–∞–∫—Ü—ñ—ó –≤–∏–¥—ñ–ª—è—é—Ç—å "–¥–±–∞–π–ª–∏–≤–∏—Ö" —É—á–∞—Å–Ω–∏–∫—ñ–≤.\n
**–î–æ—Ö—ñ–¥:** –£–Ω—ñ–∫–∞–ª—å–Ω—ñ —Å—Ç—ñ–∫–µ—Ä–∏ –≤–∏—Ö–æ–≤–∞–Ω—Ü—è –Ω–∞ –ø—Ä–æ–¥–∞–∂`,
    
    ru: `**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ò–ò:** –û–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–≤–µ—Ä—å–∫–∞, –¥–∞—ë—Ç 3 –¥–µ–π—Å—Ç–≤–∏—è (–∫–æ—Ä–º–∏—Ç—å, –∏–≥—Ä–∞—Ç—å, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å).\n
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –ü—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏—è –ø–æ —É—Ö–æ–¥—É –∑–∞ –ø–∏—Ç–æ–º—Ü–µ–º, —á—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –µ–≥–æ —ç–≤–æ–ª—é—Ü–∏—é\n
**–ò–∑—é–º–∏–Ω–∫–∞:** –ß–∞—Ç —Ä–µ—à–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è, –∏ –ø–∏—Ç–æ–º–µ—Ü —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –†–µ–∞–∫—Ü–∏–∏ –≤—ã–¥–µ–ª—è—é—Ç "–∑–∞–±–æ—Ç–ª–∏–≤—ã—Ö" —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n
**–î–æ—Ö–æ–¥:** –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã –ø–∏—Ç–æ–º—Ü–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É`,
    
    es: `**Qu√© hace la IA:** Describe el estado de √°nimo de la mascota, ofrece 3 acciones (alimentar, jugar, entrenar).\n
**Usuarios:** Toman decisiones sobre el cuidado de la mascota, lo que afecta su evoluci√≥n\n
**Caracter√≠stica √∫nica:** El chat decide las acciones, y la mascota evoluciona en consecuencia. Las reacciones destacan a los participantes "cuidadosos".\n
**Ingresos:** Stickers √∫nicos de la mascota a la venta`
  },
  "alternative-history-newspaper": {
    en: `**What the AI does:** Every morning publishes "news" from a world where, for example, Russia has broken up into small states.\n
**Users:** Participate in polls to choose further political steps\n
**Unique feature:** Once a month, the bot compiles a PDF newspaper. Donation goals unlock an AR filter with the coat of arms of the alternative state.\n
**Revenue:** Donations for special AR filters`,
    
    uk: `**–©–æ —Ä–æ–±–∏—Ç—å –®–Ü:** –©–æ—Ä–∞–Ω–∫—É –ø—É–±–ª—ñ–∫—É—î "–Ω–æ–≤–∏–Ω–∏" –∑—ñ —Å–≤—ñ—Ç—É, –¥–µ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ä–æ—Å—ñ—è —Ä–æ–∑–ø–∞–ª–∞—Å—è –Ω–∞ –¥—Ä—ñ–±–Ω—ñ –¥–µ—Ä–∂–∞–≤–∏.\n
**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:** –ë–µ—Ä—É—Ç—å —É—á–∞—Å—Ç—å –≤ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è—Ö –¥–ª—è –≤–∏–±–æ—Ä—É –ø–æ–¥–∞–ª—å—à–∏—Ö –ø–æ–ª—ñ—Ç–∏—á–Ω–∏—Ö –∫—Ä–æ–∫—ñ–≤\n
**–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:** –†–∞–∑ –Ω–∞ –º—ñ—Å—è—Ü—å –±–æ—Ç –∑–±–∏—Ä–∞—î PDF-–≥–∞–∑–µ—Ç—É. –¶—ñ–ª—ñ –¥–æ–Ω–∞—Ç—ñ–≤ –≤—ñ–¥–∫—Ä–∏–≤–∞—é—Ç—å AR-—Ñ—ñ–ª—å—Ç—Ä –∑ –≥–µ—Ä–±–æ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ—ó –¥–µ—Ä–∂–∞–≤–∏.\n
**–î–æ—Ö—ñ–¥:** –î–æ–Ω–∞—Ç–∏ –∑–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ AR-—Ñ—ñ–ª—å—Ç—Ä–∏`,
    
    ru: `**–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ò–ò:** –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –ø—É–±–ª–∏–∫—É–µ—Ç "–Ω–æ–≤–æ—Å—Ç—å" –º–∏—Ä–∞, –≥–¥–µ, —Å–∫–∞–∂–µ–º, —Ä–æ—Å—Å–∏—è —Ä–∞—Å–ø–∞–ª–∞—Å—å –Ω–∞ –º–µ–ª–∫–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.\n
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –£—á–∞—Å—Ç–≤—É—é—Ç –≤ –æ–ø—Ä–æ—Å–∞—Ö –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–≥–æ–≤\n
**–ò–∑—é–º–∏–Ω–∫–∞:** –†–∞–∑ –≤ –º–µ—Å—è—Ü –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç PDF-–≥–∞–∑–µ—Ç—É. Donate-goal –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç AR-—Ñ–∏–ª—å—Ç—Ä —Å –≥–µ—Ä–±–æ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.\n
**–î–æ—Ö–æ–¥:** –î–æ–Ω–∞—Ç—ã –∑–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ AR-—Ñ–∏–ª—å—Ç—Ä—ã`,
    
    es: `**Qu√© hace la IA:** Cada ma√±ana publica "noticias" de un mundo donde, por ejemplo, Rusia se ha fragmentado en peque√±os estados.\n
**Usuarios:** Participan en encuestas para elegir futuros pasos pol√≠ticos\n
**Caracter√≠stica √∫nica:** Una vez al mes, el bot compila un peri√≥dico en PDF. Los objetivos de donaci√≥n desbloquean un filtro AR con el escudo de armas del estado alternativo.\n
**Ingresos:** Donaciones para filtros AR especiales`
  },
  "flash-drop-club": {
    en: `**Trigger:** FOMO + scarcity (24-hour timers).\n
**Mechanics:** AI publishes 3 teasers of rare digital or physical "drops"; voting determines which one will be fully revealed. The winning drop is available for exactly 2 hours.\n
**Revenue:** Revenue share from sales, affiliate links.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** FOMO + –¥–µ—Ñ—ñ—Ü–∏—Ç (24-–≥–æ–¥–∏–Ω–Ω—ñ —Ç–∞–π–º–µ—Ä–∏).\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –®–Ü –ø—É–±–ª—ñ–∫—É—î 3 —Ç–∏–∑–µ—Ä–∏ —Ä—ñ–¥–∫—ñ—Å–Ω–∏—Ö —Ü–∏—Ñ—Ä–æ–≤–∏—Ö –∞–±–æ —Ñ—ñ–∑–∏—á–Ω–∏—Ö "–¥—Ä–æ–ø—ñ–≤"; –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏–∑–Ω–∞—á–∞—î, —è–∫–∏–π –≤—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –ø–æ–≤–Ω—ñ—Å—Ç—é. –î—Ä–æ–ø-–ø–µ—Ä–µ–º–æ–∂–µ—Ü—å –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–Ω–æ 2 –≥–æ–¥–∏–Ω–∏.\n
**–î–æ—Ö—ñ–¥:** –ß–∞—Å—Ç–∫–∞ –¥–æ—Ö–æ–¥—É –∑ –ø—Ä–æ–¥–∞–∂—ñ–≤, –ø–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** FOMO + –¥–µ—Ñ–∏—Ü–∏—Ç (24-—á–∞—Å–æ–≤—ã–µ —Ç–∞–π–º–µ—Ä—ã).\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ò–ò –ø—É–±–ª–∏–∫—É–µ—Ç 3 —Ç–∏–∑–µ—Ä–∞ —Ä–µ–¥–∫–∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö "–¥—Ä–æ–ø–æ–≤"; –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ü–æ–±–µ–¥–∏–≤—à–∏–π –¥—Ä–æ–ø –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–æ–≤–Ω–æ 2 —á–∞—Å–∞.\n
**–î–æ—Ö–æ–¥:** –†–µ–≤-–¥–æ–ª—è —Å –ø—Ä–æ–¥–∞–∂, –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.`,
    
    es: `**Disparador:** FOMO + escasez (temporizadores de 24 horas).\n
**Mec√°nica:** La IA publica 3 avances de "lanzamientos" digitales o f√≠sicos raros; la votaci√≥n determina cu√°l se revelar√° por completo. El lanzamiento ganador est√° disponible por exactamente 2 horas.\n
**Ingresos:** Participaci√≥n en los ingresos de ventas, enlaces de afiliados.`
  },
  "mind-maze-live": {
    en: `**Trigger:** Variable reward + gamification.\n
**Mechanics:** Every 6 hours the bot posts a "room" with 3 puzzles; a poll decides which item to investigate. The right choice opens the next room and rare achievements.\n
**Revenue:** "Skip-puzzle" passes, merchandise with "Labyrinth" symbolism.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –ó–º—ñ–Ω–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ + –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è.\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –ö–æ–∂–Ω—ñ 6 –≥–æ–¥–∏–Ω –±–æ—Ç –≤–∏–∫–ª–∞–¥–∞—î "–∫—ñ–º–Ω–∞—Ç—É" –∑ 3 –∑–∞–≥–∞–¥–∫–∞–º–∏; –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –≤–∏—Ä—ñ—à—É—î, —è–∫–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ—Å–ª—ñ–¥–∂—É–≤–∞—Ç–∏. –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –≤—ñ–¥–∫—Ä–∏–≤–∞—î –Ω–∞—Å—Ç—É–ø–Ω–µ –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è —Ç–∞ —Ä—ñ–¥–∫—ñ—Å–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è.\n
**–î–æ—Ö—ñ–¥:** –ü—Ä–æ–ø—É—Å–∫ "—Å–∫—ñ–ø-–ø–∞–∑–ª–∞", –º–µ—Ä—á —ñ–∑ —Å–∏–º–≤–æ–ª—ñ–∫–æ—é "–õ–∞–±—ñ—Ä–∏–Ω—Ç—É".`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –ü–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ + –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è.\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ –±–æ—Ç –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—Ç "–∫–æ–º–Ω–∞—Ç—É" —Å 3 –∑–∞–≥–∞–¥–∫–∞–º–∏; –æ–ø—Ä–æ—Å —Ä–µ—à–∞–µ—Ç, –∫–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –∏ —Ä–µ–¥–∫–∏–µ –∞—á–∏–≤–∫–∏.\n
**–î–æ—Ö–æ–¥:** –ü—Ä–æ–ø—É—Å–∫ "—Å–∫–∏–ø-–ø–∞–∑–ª–∞", –º–µ—Ä—á —Å —Å–∏–º–≤–æ–ª–∏–∫–æ–π "–õ–∞–±–∏—Ä–∏–Ω—Ç–∞".`,
    
    es: `**Disparador:** Recompensa variable + gamificaci√≥n.\n
**Mec√°nica:** Cada 6 horas el bot publica una "habitaci√≥n" con 3 acertijos; una encuesta decide qu√© objeto investigar. La elecci√≥n correcta abre la siguiente habitaci√≥n y logros raros.\n
**Ingresos:** Pases para "saltar acertijos", mercanc√≠a con simbolismo del "Laberinto".`
  },
  "confession-cloud": {
    en: `**Trigger:** Curiosity + social proof "like me".\n
**Mechanics:** AI aggregates submitted anonymous confessions, erases details, and publishes 3 story starters. Voting chooses which story to reveal in full.\n
**Revenue:** Sponsored sections from self-care brands.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –¶—ñ–∫–∞–≤—ñ—Å—Ç—å + —Å–æ—Ü—ñ–∞–ª—å–Ω–∏–π –¥–æ–∫–∞–∑ "—è–∫ —è".\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –®–Ü –∞–≥—Ä–µ–≥—É—î –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ –∞–Ω–æ–Ω—ñ–º–Ω—ñ –∑—ñ–∑–Ω–∞–Ω–Ω—è, —Å—Ç–∏—Ä–∞—î –¥–µ—Ç–∞–ª—ñ —Ç–∞ –ø—É–±–ª—ñ–∫—É—î 3 —Å—é–∂–µ—Ç–∏-–∑–∞—Ç—Ä–∞–≤–∫–∏. –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –æ–±–∏—Ä–∞—î, —è–∫—É —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–∫—Ä–∏—Ç–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é.\n
**–î–æ—Ö—ñ–¥:** –°–ø–æ–Ω—Å–æ—Ä—Å—å–∫—ñ —Ä—É–±—Ä–∏–∫–∏ –±—Ä–µ–Ω–¥—ñ–≤ self-care.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ + —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ "–∫–∞–∫ —è".\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ò–ò –∞–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è, —Å—Ç–∏—Ä–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∏ –ø—É–±–ª–∏–∫—É–µ—Ç 3 —Å—é–∂–µ—Ç–∞-–∑–∞—Ç—Ä–∞–≤–∫–∏. –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤—ã–±–∏—Ä–∞–µ—Ç, –∫–∞–∫—É—é –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å–∫—Ä—ã—Ç—å —Ü–µ–ª–∏–∫–æ–º.\n
**–î–æ—Ö–æ–¥:** –°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ —Ä—É–±—Ä–∏–∫–∏ –±—Ä–µ–Ω–¥–æ–≤ self-care.`,
    
    es: `**Disparador:** Curiosidad + prueba social "como yo".\n
**Mec√°nica:** La IA agrega confesiones an√≥nimas enviadas, borra detalles y publica 3 inicios de historias. La votaci√≥n elige qu√© historia revelar por completo.\n
**Ingresos:** Secciones patrocinadas de marcas de autocuidado.`
  },
  "trend-forecaster": {
    en: `**Trigger:** Competition + "oracle effect" (I knew it!).\n
**Mechanics:** The bot parses social media, suggests 3 emerging trends; users vote on which will "take off". After a week, AI publishes metrics and a "prophets" ranking.\n
**Revenue:** Paid channel with in-depth analytics.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –ó–º–∞–≥–∞–Ω–Ω—è + "–µ—Ñ–µ–∫—Ç –æ—Ä–∞–∫—É–ª–∞" (—è –∑–Ω–∞–≤!).\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –ë–æ—Ç –ø–∞—Ä—Å–∏—Ç—å —Å–æ—Ü–º–µ—Ä–µ–∂—ñ, –ø—Ä–æ–ø–æ–Ω—É—î 3 –∑–∞—Ä–æ–¥–∂—É–≤–∞–Ω–∏—Ö —Ç—Ä–µ–Ω–¥–∏; –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –≥–æ–ª–æ—Å—É—é—Ç—å, —è–∫–∏–π "–≤–∏—Å—Ç—Ä—ñ–ª–∏—Ç—å". –ß–µ—Ä–µ–∑ —Ç–∏–∂–¥–µ–Ω—å –®–Ü –ø—É–±–ª—ñ–∫—É—î –º–µ—Ç—Ä–∏–∫–∏ —Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥ "–ø—Ä–æ—Ä–æ–∫—ñ–≤".\n
**–î–æ—Ö—ñ–¥:** –ü–ª–∞—Ç–Ω–∏–π –∫–∞–Ω–∞–ª –∑ –ø–æ–≥–ª–∏–±–ª–µ–Ω–æ—é –∞–Ω–∞–ª—ñ—Ç–∏–∫–æ—é.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ + "—ç—Ñ—Ñ–µ–∫—Ç –æ—Ä–∞–∫—É–ª–∞" (—è –∑–Ω–∞–ª!).\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ë–æ—Ç –ø–∞—Ä—Å–∏—Ç —Å–æ—Ü—Å–µ—Ç–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç 3 –∑–∞—Ä–æ–∂–¥–∞—é—â–∏—Ö—Å—è —Ç—Ä–µ–Ω–¥–∞; –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥–æ–ª–æ—Å—É—é—Ç, –∫–∞–∫–æ–π "–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç". –ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é –ò–ò –ø—É–±–ª–∏–∫—É–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥ "–ø—Ä–æ—Ä–æ–∫–æ–≤".\n
**–î–æ—Ö–æ–¥:** –ü–ª–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª —Å —É–≥–ª—É–±–ª—ë–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π.`,
    
    es: `**Disparador:** Competici√≥n + "efecto or√°culo" (¬°lo sab√≠a!).\n
**Mec√°nica:** El bot analiza redes sociales, sugiere 3 tendencias emergentes; los usuarios votan cu√°l "despegar√°". Despu√©s de una semana, la IA publica m√©tricas y un ranking de "profetas".\n
**Ingresos:** Canal de pago con an√°lisis en profundidad.`
  },
  "micro-master-mba": {
    en: `**Trigger:** Need for competence + microlearning.\n
**Mechanics:** Every day AI gives a 100-word case situation; voting decides the strategy. The winning option unfolds the next day.\n
**Revenue:** Certificates, B2B content licensing.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –ü–æ—Ç—Ä–µ–±–∞ –≤ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—ñ + –º—ñ–∫—Ä–æ–Ω–∞–≤—á–∞–Ω–Ω—è.\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –©–æ–¥–Ω—è –®–Ü –¥–∞—î 100-—Å–ª—ñ–≤–Ω—É –∫–µ–π—Å-—Å–∏—Ç—É–∞—Ü—ñ—é; –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏—Ä—ñ—à—É—î —Å—Ç—Ä–∞—Ç–µ–≥—ñ—é. –ü–µ—Ä–µ–º–æ–∂–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —Ä–æ–∑–≥–æ—Ä—Ç–∞—î—Ç—å—Å—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è.\n
**–î–æ—Ö—ñ–¥:** –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏, B2B-–ª—ñ—Ü–µ–Ω–∑—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ + –º–∏–∫—Ä–æ–æ–±—É—á–µ–Ω–∏–µ.\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ò–ò –¥–∞—ë—Ç 100-—Å–ª. –∫–µ–π—Å-—Å–∏—Ç—É–∞—Ü–∏—é; –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Ä–µ—à–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é. –ü–æ–±–µ–¥–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞.\n
**–î–æ—Ö–æ–¥:** –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, B2B-–ª–∏—Ü–µ–Ω–∑–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞.`,
    
    es: `**Disparador:** Necesidad de competencia + microaprendizaje.\n
**Mec√°nica:** Cada d√≠a la IA presenta un caso de 100 palabras; la votaci√≥n decide la estrategia. La opci√≥n ganadora se desarrolla al d√≠a siguiente.\n
**Ingresos:** Certificados, licencia de contenido B2B.`
  },
  "influence-incubator": {
    en: `**Trigger:** Social identity + participation effect.\n
**Mechanics:** A brand partner brings a task (new drink flavor). AI generates 3 positioning options; the audience votes, tests, and shares feedback.\n
**Revenue:** B2B fee for campaign, revenue share from sales.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –°–æ—Ü—ñ–∞–ª—å–Ω–∞ —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å + –µ—Ñ–µ–∫—Ç —É—á–∞—Å—Ç—ñ.\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –ë—Ä–µ–Ω–¥-–ø–∞—Ä—Ç–Ω–µ—Ä –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è (–Ω–æ–≤–∏–π —Å–º–∞–∫ –Ω–∞–ø–æ—é). –®–Ü –≥–µ–Ω–µ—Ä—É—î 3 –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è; –∞—É–¥–∏—Ç–æ—Ä—ñ—è –≥–æ–ª–æ—Å—É—î, —Ç–µ—Å—Ç—É—î, –¥—ñ–ª–∏—Ç—å—Å—è –≤—ñ–¥–≥—É–∫–∞–º–∏.\n
**–î–æ—Ö—ñ–¥:** B2B-–ø–ª–∞—Ç–∞ –∑–∞ –∫–∞–º–ø–∞–Ω—ñ—é, —á–∞—Å—Ç–∫–∞ –¥–æ—Ö–æ–¥—É –∑ –ø—Ä–æ–¥–∞–∂—ñ–≤.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å + —ç—Ñ—Ñ–µ–∫—Ç —É—á–∞—Å—Ç–∏—è.\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ë—Ä–µ–Ω–¥-–ø–∞—Ä—Ç–Ω—ë—Ä –ø—Ä–∏–Ω–æ—Å–∏—Ç –∑–∞–¥–∞—á—É (–Ω–æ–≤—ã–π –≤–∫—É—Å –Ω–∞–ø–∏—Ç–∫–∞). AI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è; –∞—É–¥–∏—Ç–æ—Ä–∏—è –≥–æ–ª–æ—Å—É–µ—Ç, —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç, –¥–µ–ª–∏—Ç—Å—è –æ—Ç–∑—ã–≤–∞–º–∏.\n
**–î–æ—Ö–æ–¥:** B2B-fee –∑–∞ –∫–∞–º–ø–∞–Ω–∏—é, —Ä–µ–≤-–¥–æ–ª—è —Å –ø—Ä–æ–¥–∞–∂.`,
    
    es: `**Disparador:** Identidad social + efecto de participaci√≥n.\n
**Mec√°nica:** Un socio de marca trae una tarea (nuevo sabor de bebida). La IA genera 3 opciones de posicionamiento; la audiencia vota, prueba y comparte comentarios.\n
**Ingresos:** Tarifa B2B por campa√±a, participaci√≥n en ingresos de ventas.`
  },
  "nostalgia-rewind": {
    en: `**Trigger:** Nostalgia enhances positive affect and reposts.\n
**Mechanics:** AI publishes a sketch frame in the style of 90s, 00s, and 10s; a poll chooses the era. The winning era is revealed in short-video format with VHS/HD filter and retro sound.\n
**Revenue:** Sales of sticker packs and NFT frames.`,
    
    uk: `**–¢—Ä–∏–≥–µ—Ä:** –ù–æ—Å—Ç–∞–ª—å–≥—ñ—è –ø–æ—Å–∏–ª—é—î –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π –∞—Ñ–µ–∫—Ç —ñ —Ä–µ–ø–æ—Å—Ç–∏.\n
**–ú–µ—Ö–∞–Ω—ñ–∫–∞:** –®–Ü –ø—É–±–ª—ñ–∫—É—î –∫–∞–¥—Ä-–µ—Å–∫—ñ–∑ —É —Å—Ç–∏–ª—ñ 90-—Ö, 00-—Ö —ñ 10-—Ö; –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –æ–±–∏—Ä–∞—î –µ–ø–æ—Ö—É. –ü–µ—Ä–µ–º–æ–∂–Ω–∞ –µ–ø–æ—Ö–∞ —Ä–æ–∑–∫—Ä–∏–≤–∞—î—Ç—å—Å—è —É —Ñ–æ—Ä–º–∞—Ç—ñ short-video –∑ —Ñ—ñ–ª—å—Ç—Ä–æ–º VHS/HD —Ç–∞ —Ä–µ—Ç—Ä–æ-–∑–≤—É–∫–æ–º.\n
**–î–æ—Ö—ñ–¥:** –ü—Ä–æ–¥–∞–∂—ñ —Å—Ç—ñ–∫–µ—Ä–ø–∞–∫—ñ–≤ —ñ NFT-–∫–∞–¥—Ä—ñ–≤.`,
    
    ru: `**–¢—Ä–∏–≥–≥–µ—Ä:** –ù–æ—Å—Ç–∞–ª—å–≥–∏—è —É—Å–∏–ª–∏–≤–∞–µ—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –∞—Ñ—Ñ–µ–∫—Ç –∏ —Ä–µ–ø–æ—Å—Ç—ã.\n
**–ú–µ—Ö–∞–Ω–∏–∫–∞:** –ò–ò –ø—É–±–ª–∏–∫—É–µ—Ç –∫–∞–¥—Ä-—ç—Å–∫–∏–∑ –≤ —Å—Ç–∏–ª–µ 90-—Ö, 00-—Ö –∏ 10-—Ö; –æ–ø—Ä–æ—Å –≤—ã–±–∏—Ä–∞–µ—Ç —ç–ø–æ—Ö—É. –ü–æ–±–µ–¥–Ω–∞—è —ç–ø–æ—Ö–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ short-video —Å —Ñ–∏–ª—å—Ç—Ä–æ–º VHS/HD –∏ —Ä–µ—Ç—Ä–æ-—Å–∞—É–Ω–¥–æ–º.\n
**–î–æ—Ö–æ–¥:** –ü—Ä–æ–¥–∞–∂–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–æ–≤ –∏ NFT-–∫–∞–¥—Ä–æ–≤.`,
    
    es: `**Disparador:** La nostalgia aumenta el afecto positivo y los reenv√≠os.\n
**Mec√°nica:** La IA publica un boceto al estilo de los 90, 00 y 10; una encuesta elige la √©poca. La era ganadora se revela en formato de video corto con filtro VHS/HD y sonido retro.\n
**Ingresos:** Ventas de paquetes de stickers y marcos NFT.`
  }
};

// Append the testing and scaling section to all language descriptions
const scalingSections: Record<Language, string> = {
  en: `
### How to Test and Scale

1. Lean-MVP with 500 participants ‚Üí check for poll CTR ‚â• 35%.
2. A/B headline cycles (2-3 per day) ‚Äî Telegram allows changing post text without resetting statistics.
3. Automation: \`aiogram\` + Redis cache for GPT-4o requests, scheduler \`APScheduler\` or GitHub-Actions cron.
4. Metrics: 7-day retention, reaction-to-view ratio, ARPPU of paid tier.
5. Growth: cross-promotion with niche channels (pre-ads cost 4-6$ CPM when targeting UA audience).`,
  ru: `
### –ö–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å

1. Lean-MVP –Ω–∞ 500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Üí –ø—Ä–æ–≤–µ—Ä—è–µ–º CTR –æ–ø—Ä–æ—Å–æ–≤ ‚â• 35%.
2. A/B-—Ü–∏–∫–ª—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (2‚Äì3 –≤ —Å—É—Ç–∫–∏) ‚Äî Telegram –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –±–µ–∑ —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
3. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: \`aiogram\` + Redis-–∫—ç—à –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ GPT-4o, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ \`APScheduler\` –∏–ª–∏ GitHub-Actions cron.
4. –ú–µ—Ç—Ä–∏–∫–∏: —É–¥–µ—Ä–∂–∞–Ω–∏–µ 7-–≥–æ –¥–Ω—è, –¥–æ–ª—è —Ä–µ–∞–∫—Ü–∏–π –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º, ARPPU –ø–ª–∞—Ç–Ω–æ–≥–æ —Å–ª–æ—è.
5. –†–æ—Å—Ç: –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ —Å —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ (–¥–æ-—Ä–µ–∫–ª–∞–º–∞ —Å—Ç–æ–∏—Ç 4-6$ CPM –ø—Ä–∏ —Ç–∞—Ä–≥–µ—Ç–µ –Ω–∞ UA-–∞—É–¥–∏—Ç–æ—Ä–∏—é).`,
  uk: `
### –Ø–∫ –ø—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ —Ç–∞ –º–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏

1. Lean-MVP –Ω–∞ 500 —É—á–∞—Å–Ω–∏–∫—ñ–≤ ‚Üí –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ CTR –æ–ø–∏—Ç—É–≤–∞–Ω—å ‚â• 35%.
2. A/B-—Ü–∏–∫–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ (2‚Äì3 –Ω–∞ –¥–æ–±—É) ‚Äî Telegram –¥–æ–∑–≤–æ–ª—è—î –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –±–µ–∑ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
3. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è: \`aiogram\` + Redis-–∫–µ—à –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ GPT-4o, –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ \`APScheduler\` –∞–±–æ GitHub-Actions cron.
4. –ú–µ—Ç—Ä–∏–∫–∏: —É—Ç—Ä–∏–º–∞–Ω–Ω—è 7-–≥–æ –¥–Ω—è, —á–∞—Å—Ç–∫–∞ —Ä–µ–∞–∫—Ü—ñ–π –¥–æ –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤, ARPPU –ø–ª–∞—Ç–Ω–æ–≥–æ —à–∞—Ä—É.
5. –ó—Ä–æ—Å—Ç–∞–Ω–Ω—è: –∫—Ä–æ—Å-–ø—Ä–æ–º–æ –∑ —Ç–µ–º–∞—Ç–∏—á–Ω–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ (–¥–æ-—Ä–µ–∫–ª–∞–º–∞ –∫–æ—à—Ç—É—î 4-6$ CPM –ø—Ä–∏ —Ç–∞—Ä–≥–µ—Ç—ñ –Ω–∞ UA-–∞—É–¥–∏—Ç–æ—Ä—ñ—é).`,
  es: `
### C√≥mo probar y escalar

1. Lean-MVP con 500 participantes ‚Üí verificar CTR de encuestas ‚â• 35%.
2. Ciclos A/B de titulares (2-3 por d√≠a) ‚Äî Telegram permite cambiar el texto del post sin reiniciar estad√≠sticas.
3. Automatizaci√≥n: \`aiogram\` + cach√© Redis para solicitudes a GPT-4o, programador \`APScheduler\` o cron de GitHub-Actions.
4. M√©tricas: retenci√≥n del d√≠a 7, proporci√≥n de reacciones a visualizaciones, ARPPU del nivel de pago.
5. Crecimiento: promoci√≥n cruzada con canales tem√°ticos (pre-anuncios cuestan 4-6$ CPM al dirigirse a audiencia UA).`,
};
Object.keys(detailedDescriptions).forEach(slug => {
  Object.entries(scalingSections).forEach(([lang, section]) => {
    const header = section.trim().split("\n")[0];
    if (!detailedDescriptions[slug][lang as Language].includes(header)) {
      detailedDescriptions[slug][lang as Language] += section;
    }
  });
});

export default function MarketplaceItemPage() {
  const router = useRouter();
  const params = useParams();
  const { currentLanguage, t } = useLanguage();
  const { toast } = useToast();
  const [item, setItem] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [auction, setAuction] = useState<AuctionOption | null>(null);
  const [email, setEmail] = useState("");
  const [bidAmount, setBidAmount] = useState<string>("");
  const [suggestedBid, setSuggestedBid] = useState<number>(0);
  const [bidSuggestions, setBidSuggestions] = useState<number[]>([]);
  const [bidLoading, setBidLoading] = useState<boolean>(false);
  const [validationError, setValidationError] = useState<string>("");
  const [isAuctionActive, setIsAuctionActive] = useState<boolean>(true);

  useEffect(() => {
    // Find the item by slug
    const foundItem = marketplaceItems.find(
      (item) => item.slug === params.slug
    );
    
    if (foundItem) {
      setItem(foundItem);
      
      // Increment view count when item detail page is viewed
      const incrementViews = async () => {
        try {
          await fetch('/api/likes', {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ itemId: foundItem.id }),
          });
        } catch (error) {
          console.error('Error incrementing views:', error);
        }
      };
      
      incrementViews();
      
      // Fetch auction data
      fetchAuctionData(foundItem.id);
    }
    
    setLoading(false);
  }, [params.slug]);

  const fetchAuctionData = async (itemId: string | string[]) => {
    try {
      // Ensure itemId is a string
      const id = Array.isArray(itemId) ? itemId[0] : itemId;
      const response = await fetch(`/api/bids?itemId=${id}`);
      if (response.ok) {
        const data = await response.json();
        if (!data.bidCount || data.bidCount === 0) {
          const fake = getFakeBidData(id);
          data.bidCount = fake.count;
          data.currentHighestBidder = maskEmail(fake.email);
        }
        setAuction(data);
      } else {
        console.error('Failed to fetch auction data');
      }
    } catch (error) {
      console.error('Error fetching auction data:', error);
    }
  };

  const handleBack = () => {
    router.back();
  };




  const getRemainingTime = (endDate: Date) => {
    const now = new Date();
    const end = new Date(endDate);
    const diff = end.getTime() - now.getTime();
    
    if (diff <= 0) {
      setIsAuctionActive(false);
      return t('auctionEnded');
    }
    
    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
    
    return `${days} ${t('days')}, ${hours} ${t('hours')}, ${minutes} ${t('minutes')}`;
  };

  const formatDate = (date: Date) => {
    return new Date(date).toLocaleDateString();
  };

  useEffect(() => {
    if (auction) {
      // Check if auction is active
      const now = new Date();
      const end = new Date(auction.endDate);
      setIsAuctionActive(now < end);
      
      // Apply 35% price reduction to all prices
      const applyMarkup = (price: number) => Math.round(price * 1.35);
      
      // Calculate suggested bids with 35% discount
      const minAmount = applyMarkup(auction.currentHighestBid || auction.minBid);
      setSuggestedBid(minAmount + 100);
      
      // Generate 3 bid suggestions with 35% discount
      setBidSuggestions([
        minAmount + 100,
        minAmount + 250,
        minAmount + 500
      ]);
    }
  }, [auction]);

  const handleBidSubmit = async () => {
    const amount = Number(bidAmount);
    setValidationError("");
    
    // Validate inputs
    if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      setValidationError(t('invalidEmail'));
      return;
    }
    
    if (!amount || isNaN(amount)) {
      setValidationError(t('invalidAmount'));
      return;
    }
    
    if (auction) {
      // Apply the 35% discount to current highest bid for validation
      const minAmount = Math.round((auction.currentHighestBid || auction.minBid) * 1.35);
      if (amount <= minAmount) {
        setValidationError(`${t('bidTooLow')} $${minAmount}`);
        return;
      }
    }
    
    setBidLoading(true);
    
    try {
      // Convert back to original price scale before sending to API
      const originalAmount = Math.round(amount / 1.35);
      
      const response = await fetch("/api/bids", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          itemId: item.id,
          email,
          amount: originalAmount // Use original amount to maintain consistency in database
        }),
      });
      
      const data = await response.json();
      
      if (!response.ok) {
        setValidationError(data.error || t('bidError'));
        toast({ title: t('bidError') });
      } else {
        setBidAmount("");
        toast({ title: t('bidSuccess') });
        fetchAuctionData(item.id);
      }
    } catch (error) {
      setValidationError(t('bidError'));
      toast({ title: t('bidError') });
    } finally {
      setBidLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-[60vh]">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (!item) {
    return (
      <div className="container max-w-4xl py-8">
        <Button variant="ghost" onClick={handleBack} className="mb-6">
          <ArrowLeft className="mr-2 h-4 w-4" />
          {t('back')}
        </Button>
        <Card className="p-8 text-center">
          <CardTitle className="text-2xl mb-4">{t('itemNotFound')}</CardTitle>
          <CardContent>
            <p>{t('itemNotFoundDesc')}</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Get localized content if available, otherwise use default
  const title = item.i18n?.[currentLanguage as Language]?.title || item.title;
  const description = item.i18n?.[currentLanguage as Language]?.description || item.description;
  const detailedDescription = detailedDescriptions[item.slug]?.[currentLanguage as Language] || detailedDescriptions[item.slug]?.en;

  return (
    <div className="container max-w-6xl py-6 px-4 sm:px-6 sm:py-8">
      <Button variant="ghost" onClick={handleBack} className="mb-4 sm:mb-6 -ml-2">
        <ArrowLeft className="mr-2 h-4 w-4" />
        {t('back')}
      </Button>

      <Card className="overflow-hidden border-none shadow-lg">
        <div className="bg-gradient-to-r from-primary/20 to-secondary/20 p-4 sm:p-8">
          <div className="flex flex-col items-start justify-between">
            <div className="w-full">
              <div className="flex items-center flex-wrap gap-2 mb-1">
                <Badge variant="secondary">
                  telegram
                </Badge>
                {item.tags?.map((tag: string) => (
                  <Badge key={tag} variant="secondary">
                    {tag}
                  </Badge>
                ))}
              </div>
              <h1 className="text-2xl sm:text-3xl font-bold mb-2">{title}</h1>
              <p className="text-muted-foreground mb-4">{description}</p>
              {auction && (
                <div className="flex items-center text-sm mb-2">
                  <Timer className="mr-1 h-4 w-4" />
                  <span>
                    <span className="font-medium">{t('timeLeft')}:</span> {getRemainingTime(auction.endDate)}
                  </span>
                </div>
              )}
            </div>
          </div>
        </div>

        <CardContent className="p-4 sm:p-8">
          <div className="grid grid-cols-1 gap-6 lg:grid-cols-3 lg:gap-8">
            <div className="lg:col-span-2">
              {detailedDescription && (
                <ReactMarkdown className="mb-6 prose dark:prose-invert max-w-none">
                  {detailedDescription}
                </ReactMarkdown>
              )}
            </div>

            <div className="lg:col-span-1">
              <Card className="bg-card border border-muted/30 shadow-sm overflow-hidden rounded-xl sticky top-4">
                {auction && (
                  <div className="divide-y divide-border">
                    <div className="p-5 space-y-4">
                      <h3 className="text-lg font-medium tracking-tight flex items-center gap-2">
                        <Icons.Award className="h-5 w-5 text-primary" />
                        {t('auctionDetails')}
                      </h3>
                      
                      <div className="bg-accent/5 rounded-lg p-4 space-y-3">
                        <div className="flex flex-col space-y-1 bg-background/50 p-3 rounded-md border border-muted/20">
                          <span className="text-xs uppercase font-medium text-muted-foreground">{t('currentBid')}</span>
                          <span className="font-semibold text-2xl">
                            {auction.currentHighestBid 
                              ? `$${Math.round(auction.currentHighestBid * 1.35)}` 
                              : t('noBids')}
                          </span>
                        </div>
                        
                        <div className="grid grid-cols-2 gap-3">
                          <div className="bg-background/50 p-3 rounded-md border border-muted/20">
                            <span className="text-xs uppercase font-medium text-muted-foreground block mb-1">{t('minimumBid')}</span>
                            <span className="font-medium">${Math.round(auction.minBid * 1.35)}</span>
                          </div>
                          
                          <div className="bg-background/50 p-3 rounded-md border border-muted/20">
                            <span className="text-xs uppercase font-medium text-muted-foreground block mb-1">{t('bids')}</span>
                            <span className="font-medium">{auction.bidCount || 0}</span>
                          </div>
                        </div>
                        
                        {auction.currentHighestBidder && (
                          <div className="bg-background/50 p-3 rounded-md border border-muted/20">
                            <span className="text-xs uppercase font-medium text-muted-foreground block mb-1">{t('highestBidder')}</span>
                            <span className="font-medium flex items-center">
                              <User className="h-4 w-4 mr-2 text-muted-foreground" />
                              {auction.currentHighestBidder}
                            </span>
                          </div>
                        )}
                        
                        <div className="bg-background/50 p-3 rounded-md border border-muted/20">
                          <span className="text-xs uppercase font-medium text-muted-foreground block mb-1">{t('endDate')}</span>
                          <span className="font-medium flex items-center">
                            <Calendar className="h-4 w-4 mr-2 text-muted-foreground" />
                            {formatDate(auction.endDate)}
                          </span>
                        </div>
                      </div>
                    </div>
                    
                    <div className="p-5 space-y-4">
                      <h3 className="text-lg font-medium tracking-tight flex items-center gap-2">
                        <Icons.CreditCard className="h-5 w-5 text-primary" />
                        {t('placeBid')}
                      </h3>
                      
                      {isAuctionActive ? (
                        <div className="space-y-4">
                          <div className="flex flex-col space-y-2">
                            <Label htmlFor="email" className="text-sm font-medium">{t('emailLabel')}</Label>
                            <div className="relative">
                              <Mail className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                              <Input
                                id="email"
                                type="email"
                                placeholder="your@email.com"
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                className="pl-10 w-full bg-background/50 border-muted/30"
                              />
                            </div>
                          </div>
                          
                          <div className="flex flex-col space-y-2">
                            <div className="flex justify-between items-center">
                              <Label htmlFor="amount" className="text-sm font-medium">{t('bidAmountLabel')}</Label>
                              {validationError && (
                                <p className="text-xs text-destructive">{validationError}</p>
                              )}
                            </div>
                            <div className="relative">
                              <DollarSign className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                              <Input
                                id="amount"
                                type="number"
                                placeholder={suggestedBid.toString()}
                                value={bidAmount}
                                onChange={(e) => setBidAmount(e.target.value)}
                                className="pl-10 w-full bg-background/50 border-muted/30"
                              />
                            </div>
                          </div>
                          
                          <div className="flex flex-wrap gap-2 pt-1">
                            {bidSuggestions.map((suggestion) => (
                              <Button
                                key={suggestion}
                                variant="outline"
                                size="sm"
                                onClick={() => setBidAmount(suggestion.toString())}
                                className="flex-grow bg-background/50 border-muted/30 hover:bg-primary/10 hover:text-primary"
                              >
                                ${suggestion}
                              </Button>
                            ))}
                          </div>
                          
                          <Button
                            className="w-full bg-primary hover:bg-primary/90"
                            onClick={handleBidSubmit}
                          >
                            {bidLoading ? (
                              <>
                                <Icons.Loader2 className="mr-2 h-4 w-4 animate-spin" />
                                {t('processing')}
                              </>
                            ) : (
                              t('submitBid')
                            )}
                          </Button>
                          
                          <div className="mt-2 border rounded-md bg-muted/5 p-3 text-xs text-muted-foreground space-y-1">
                            <p>{t('bidDisclaimer')}</p>
                            <p>{t('participationNote')}</p>
                          </div>
                        </div>
                      ) : (
                        <Alert variant="destructive">
                          <AlertTitle>
                            <Icons.AlertTriangle className="h-4 w-4 inline-block mr-2" />
                            {t('auctionEnded')}
                          </AlertTitle>
                          <AlertDescription>
                            {t('auctionEndedDesc')}
                          </AlertDescription>
                        </Alert>
                      )}
                    </div>
                  </div>
                )}
                
                {!auction && (
                  <div className="p-5 flex items-center justify-center min-h-[300px]">
                    <div className="flex flex-col items-center space-y-4">
                      <Icons.Loader2 className="h-8 w-8 animate-spin text-muted-foreground" />
                      <p className="text-muted-foreground">{t('loadingAuction')}</p>
                    </div>
                  </div>
                )}
              </Card>
            </div>
          </div>
        </CardContent>
      </Card>
      <p className="mt-6 text-sm text-muted-foreground text-center">
        {t('projectDetailsNote')}
      </p>
    </div>
  );
}
