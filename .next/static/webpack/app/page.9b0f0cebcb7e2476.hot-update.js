"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/ui/markdown.tsx":
/*!************************************!*\
  !*** ./components/ui/markdown.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Markdown: () => (/* binding */ Markdown)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction escapeHtml(input) {\n    return input.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\nfunction renderMarkdown(md) {\n    // extract fenced code blocks first\n    const codeBlocks = [];\n    let pre = md.replace(/```(\\w+)?\\n([\\s\\S]*?)\\n```/g, function(_m) {\n        let lang = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", code = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\";\n        const idx = codeBlocks.push({\n            lang,\n            code\n        }) - 1;\n        return \"@@CODE_\".concat(idx, \"@@\");\n    });\n    const safe = escapeHtml(pre);\n    const lines = safe.split(/\\r?\\n/);\n    const out = [];\n    let inList = false;\n    const flushList = ()=>{\n        if (inList) {\n            out.push(\"</ul>\");\n            inList = false;\n        }\n    };\n    for (const raw of lines){\n        const line = raw.trimEnd();\n        if (line.startsWith(\"## \")) {\n            flushList();\n            out.push('<h2 class=\"font-semibold text-base sm:text-lg mb-1\">'.concat(line.slice(3), \"</h2>\"));\n            continue;\n        }\n        if (line.startsWith(\"### \")) {\n            flushList();\n            out.push('<h3 class=\"font-semibold text-sm sm:text-base mb-1\">'.concat(line.slice(4), \"</h3>\"));\n            continue;\n        }\n        if (line.startsWith(\"- \")) {\n            if (!inList) {\n                out.push('<ul class=\"list-disc pl-5 space-y-1\">');\n                inList = true;\n            }\n            const item = line.slice(2);\n            out.push(\"<li>\".concat(item, \"</li>\"));\n            continue;\n        }\n        if (line === \"\") {\n            flushList();\n            out.push(\"<br/>\");\n            continue;\n        }\n        // bold/italic/links/inline code\n        let txt = line;\n        txt = txt.replace(/\\*\\*(.+?)\\*\\*/g, \"<strong>$1</strong>\");\n        txt = txt.replace(/\\*(.+?)\\*/g, \"<em>$1</em>\");\n        txt = txt.replace(/`([^`]+)`/g, '<code class=\"px-1 py-0.5 rounded bg-muted/30\">$1</code>');\n        txt = txt.replace(/\\[([^\\]]+)\\]\\((https?:[^\\)]+)\\)/g, '<a class=\"underline\" href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n        out.push(\"<p>\".concat(txt, \"</p>\"));\n    }\n    flushList();\n    let html = out.join(\"\");\n    html = html.replace(/@@CODE_(\\d+)@@/g, (_m, i)=>{\n        const b = codeBlocks[Number(i)];\n        const codeEscaped = escapeHtml(b.code);\n        const lang = b.lang ? \"language-\".concat(b.lang) : \"\";\n        return '<pre class=\"rounded-md bg-muted/20 p-3 overflow-x-auto\"><code class=\"'.concat(lang, '\">').concat(codeEscaped, \"</code></pre>\");\n    });\n    return html;\n}\nfunction Markdown(param) {\n    let { content } = param;\n    _s();\n    const html = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"Markdown.useMemo[html]\": ()=>renderMarkdown(content)\n    }[\"Markdown.useMemo[html]\"], [\n        content\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"prose prose-invert text-sm max-w-none\",\n        dangerouslySetInnerHTML: {\n            __html: html\n        }\n    }, void 0, false, {\n        fileName: \"/Users/oleksandrp/Desktop/oleksandrp/components/ui/markdown.tsx\",\n        lineNumber: 77,\n        columnNumber: 10\n    }, this);\n}\n_s(Markdown, \"OtathaP3BKVCXaZtVNvoS+3QIcY=\");\n_c = Markdown;\nvar _c;\n$RefreshReg$(_c, \"Markdown\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvbWFya2Rvd24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5QjtBQUV6QixTQUFTQyxXQUFXQyxLQUFhO0lBQy9CLE9BQU9BLE1BQ0pDLE9BQU8sQ0FBQyxNQUFNLFNBQ2RBLE9BQU8sQ0FBQyxNQUFNLFFBQ2RBLE9BQU8sQ0FBQyxNQUFNO0FBQ25CO0FBRUEsU0FBU0MsZUFBZUMsRUFBVTtJQUNoQyxtQ0FBbUM7SUFDbkMsTUFBTUMsYUFBK0MsRUFBRTtJQUN2RCxJQUFJQyxNQUFNRixHQUFHRixPQUFPLENBQUMsK0JBQStCLFNBQUNLO1lBQUlDLHdFQUFPLElBQUlDLHdFQUFPO1FBQ3pFLE1BQU1DLE1BQU1MLFdBQVdNLElBQUksQ0FBQztZQUFFSDtZQUFNQztRQUFLLEtBQUs7UUFDOUMsT0FBTyxVQUFjLE9BQUpDLEtBQUk7SUFDdkI7SUFFQSxNQUFNRSxPQUFPWixXQUFXTTtJQUN4QixNQUFNTyxRQUFRRCxLQUFLRSxLQUFLLENBQUM7SUFDekIsTUFBTUMsTUFBZ0IsRUFBRTtJQUN4QixJQUFJQyxTQUFTO0lBRWIsTUFBTUMsWUFBWTtRQUNoQixJQUFJRCxRQUFRO1lBQ1ZELElBQUlKLElBQUksQ0FBQztZQUNUSyxTQUFTO1FBQ1g7SUFDRjtJQUVBLEtBQUssTUFBTUUsT0FBT0wsTUFBTztRQUN2QixNQUFNTSxPQUFPRCxJQUFJRSxPQUFPO1FBQ3hCLElBQUlELEtBQUtFLFVBQVUsQ0FBQyxRQUFRO1lBQzFCSjtZQUNBRixJQUFJSixJQUFJLENBQUMsdURBQXFFLE9BQWRRLEtBQUtHLEtBQUssQ0FBQyxJQUFHO1lBQzlFO1FBQ0Y7UUFDQSxJQUFJSCxLQUFLRSxVQUFVLENBQUMsU0FBUztZQUMzQko7WUFDQUYsSUFBSUosSUFBSSxDQUFDLHVEQUFxRSxPQUFkUSxLQUFLRyxLQUFLLENBQUMsSUFBRztZQUM5RTtRQUNGO1FBQ0EsSUFBSUgsS0FBS0UsVUFBVSxDQUFDLE9BQU87WUFDekIsSUFBSSxDQUFDTCxRQUFRO2dCQUNYRCxJQUFJSixJQUFJLENBQUM7Z0JBQ1RLLFNBQVM7WUFDWDtZQUNBLE1BQU1PLE9BQU9KLEtBQUtHLEtBQUssQ0FBQztZQUN4QlAsSUFBSUosSUFBSSxDQUFDLE9BQVksT0FBTFksTUFBSztZQUNyQjtRQUNGO1FBQ0EsSUFBSUosU0FBUyxJQUFJO1lBQ2ZGO1lBQ0FGLElBQUlKLElBQUksQ0FBQztZQUNUO1FBQ0Y7UUFDQSxnQ0FBZ0M7UUFDaEMsSUFBSWEsTUFBTUw7UUFDVkssTUFBTUEsSUFBSXRCLE9BQU8sQ0FBQyxrQkFBa0I7UUFDcENzQixNQUFNQSxJQUFJdEIsT0FBTyxDQUFDLGNBQWM7UUFDaENzQixNQUFNQSxJQUFJdEIsT0FBTyxDQUFDLGNBQWM7UUFDaENzQixNQUFNQSxJQUFJdEIsT0FBTyxDQUFDLG9DQUFvQztRQUN0RGEsSUFBSUosSUFBSSxDQUFDLE1BQVUsT0FBSmEsS0FBSTtJQUNyQjtJQUNBUDtJQUNBLElBQUlRLE9BQU9WLElBQUlXLElBQUksQ0FBQztJQUNwQkQsT0FBT0EsS0FBS3ZCLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQ0ssSUFBSW9CO1FBQzFDLE1BQU1DLElBQUl2QixVQUFVLENBQUN3QixPQUFPRixHQUFHO1FBQy9CLE1BQU1HLGNBQWM5QixXQUFXNEIsRUFBRW5CLElBQUk7UUFDckMsTUFBTUQsT0FBT29CLEVBQUVwQixJQUFJLEdBQUcsWUFBbUIsT0FBUG9CLEVBQUVwQixJQUFJLElBQUs7UUFDN0MsT0FBTyx3RUFBaUZzQixPQUFUdEIsTUFBSyxNQUFnQixPQUFac0IsYUFBWTtJQUN0RztJQUNBLE9BQU9MO0FBQ1Q7QUFFTyxTQUFTTSxTQUFTLEtBQWdDO1FBQWhDLEVBQUVDLE9BQU8sRUFBdUIsR0FBaEM7O0lBQ3ZCLE1BQU1QLE9BQU8xQixvREFBYTtrQ0FBQyxJQUFNSSxlQUFlNkI7aUNBQVU7UUFBQ0E7S0FBUTtJQUNuRSxxQkFBTyw4REFBQ0U7UUFBSUMsV0FBVTtRQUF3Q0MseUJBQXlCO1lBQUVDLFFBQVFaO1FBQUs7Ozs7OztBQUN4RztHQUhnQk07S0FBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vbGVrc2FuZHJwL0Rlc2t0b3Avb2xla3NhbmRycC9jb21wb25lbnRzL3VpL21hcmtkb3duLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuZnVuY3Rpb24gZXNjYXBlSHRtbChpbnB1dDogc3RyaW5nKSB7XG4gIHJldHVybiBpbnB1dFxuICAgIC5yZXBsYWNlKC8mL2csIFwiJmFtcDtcIilcbiAgICAucmVwbGFjZSgvPC9nLCBcIiZsdDtcIilcbiAgICAucmVwbGFjZSgvPi9nLCBcIiZndDtcIilcbn1cblxuZnVuY3Rpb24gcmVuZGVyTWFya2Rvd24obWQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIC8vIGV4dHJhY3QgZmVuY2VkIGNvZGUgYmxvY2tzIGZpcnN0XG4gIGNvbnN0IGNvZGVCbG9ja3M6IHsgbGFuZzogc3RyaW5nOyBjb2RlOiBzdHJpbmcgfVtdID0gW11cbiAgbGV0IHByZSA9IG1kLnJlcGxhY2UoL2BgYChcXHcrKT9cXG4oW1xcc1xcU10qPylcXG5gYGAvZywgKF9tLCBsYW5nID0gXCJcIiwgY29kZSA9IFwiXCIpID0+IHtcbiAgICBjb25zdCBpZHggPSBjb2RlQmxvY2tzLnB1c2goeyBsYW5nLCBjb2RlIH0pIC0gMVxuICAgIHJldHVybiBgQEBDT0RFXyR7aWR4fUBAYFxuICB9KVxuXG4gIGNvbnN0IHNhZmUgPSBlc2NhcGVIdG1sKHByZSlcbiAgY29uc3QgbGluZXMgPSBzYWZlLnNwbGl0KC9cXHI/XFxuLylcbiAgY29uc3Qgb3V0OiBzdHJpbmdbXSA9IFtdXG4gIGxldCBpbkxpc3QgPSBmYWxzZVxuXG4gIGNvbnN0IGZsdXNoTGlzdCA9ICgpID0+IHtcbiAgICBpZiAoaW5MaXN0KSB7XG4gICAgICBvdXQucHVzaChcIjwvdWw+XCIpXG4gICAgICBpbkxpc3QgPSBmYWxzZVxuICAgIH1cbiAgfVxuXG4gIGZvciAoY29uc3QgcmF3IG9mIGxpbmVzKSB7XG4gICAgY29uc3QgbGluZSA9IHJhdy50cmltRW5kKClcbiAgICBpZiAobGluZS5zdGFydHNXaXRoKFwiIyMgXCIpKSB7XG4gICAgICBmbHVzaExpc3QoKVxuICAgICAgb3V0LnB1c2goYDxoMiBjbGFzcz1cImZvbnQtc2VtaWJvbGQgdGV4dC1iYXNlIHNtOnRleHQtbGcgbWItMVwiPiR7bGluZS5zbGljZSgzKX08L2gyPmApXG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICBpZiAobGluZS5zdGFydHNXaXRoKFwiIyMjIFwiKSkge1xuICAgICAgZmx1c2hMaXN0KClcbiAgICAgIG91dC5wdXNoKGA8aDMgY2xhc3M9XCJmb250LXNlbWlib2xkIHRleHQtc20gc206dGV4dC1iYXNlIG1iLTFcIj4ke2xpbmUuc2xpY2UoNCl9PC9oMz5gKVxuICAgICAgY29udGludWVcbiAgICB9XG4gICAgaWYgKGxpbmUuc3RhcnRzV2l0aChcIi0gXCIpKSB7XG4gICAgICBpZiAoIWluTGlzdCkge1xuICAgICAgICBvdXQucHVzaCgnPHVsIGNsYXNzPVwibGlzdC1kaXNjIHBsLTUgc3BhY2UteS0xXCI+JylcbiAgICAgICAgaW5MaXN0ID0gdHJ1ZVxuICAgICAgfVxuICAgICAgY29uc3QgaXRlbSA9IGxpbmUuc2xpY2UoMilcbiAgICAgIG91dC5wdXNoKGA8bGk+JHtpdGVtfTwvbGk+YClcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuICAgIGlmIChsaW5lID09PSBcIlwiKSB7XG4gICAgICBmbHVzaExpc3QoKVxuICAgICAgb3V0LnB1c2goXCI8YnIvPlwiKVxuICAgICAgY29udGludWVcbiAgICB9XG4gICAgLy8gYm9sZC9pdGFsaWMvbGlua3MvaW5saW5lIGNvZGVcbiAgICBsZXQgdHh0ID0gbGluZVxuICAgIHR4dCA9IHR4dC5yZXBsYWNlKC9cXCpcXCooLis/KVxcKlxcKi9nLCBcIjxzdHJvbmc+JDE8L3N0cm9uZz5cIilcbiAgICB0eHQgPSB0eHQucmVwbGFjZSgvXFwqKC4rPylcXCovZywgXCI8ZW0+JDE8L2VtPlwiKVxuICAgIHR4dCA9IHR4dC5yZXBsYWNlKC9gKFteYF0rKWAvZywgJzxjb2RlIGNsYXNzPVwicHgtMSBweS0wLjUgcm91bmRlZCBiZy1tdXRlZC8zMFwiPiQxPC9jb2RlPicpXG4gICAgdHh0ID0gdHh0LnJlcGxhY2UoL1xcWyhbXlxcXV0rKVxcXVxcKChodHRwcz86W15cXCldKylcXCkvZywgJzxhIGNsYXNzPVwidW5kZXJsaW5lXCIgaHJlZj1cIiQyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPiQxPC9hPicpXG4gICAgb3V0LnB1c2goYDxwPiR7dHh0fTwvcD5gKVxuICB9XG4gIGZsdXNoTGlzdCgpXG4gIGxldCBodG1sID0gb3V0LmpvaW4oXCJcIilcbiAgaHRtbCA9IGh0bWwucmVwbGFjZSgvQEBDT0RFXyhcXGQrKUBAL2csIChfbSwgaSkgPT4ge1xuICAgIGNvbnN0IGIgPSBjb2RlQmxvY2tzW051bWJlcihpKV1cbiAgICBjb25zdCBjb2RlRXNjYXBlZCA9IGVzY2FwZUh0bWwoYi5jb2RlKVxuICAgIGNvbnN0IGxhbmcgPSBiLmxhbmcgPyBgbGFuZ3VhZ2UtJHtiLmxhbmd9YCA6IFwiXCJcbiAgICByZXR1cm4gYDxwcmUgY2xhc3M9XCJyb3VuZGVkLW1kIGJnLW11dGVkLzIwIHAtMyBvdmVyZmxvdy14LWF1dG9cIj48Y29kZSBjbGFzcz1cIiR7bGFuZ31cIj4ke2NvZGVFc2NhcGVkfTwvY29kZT48L3ByZT5gXG4gIH0pXG4gIHJldHVybiBodG1sXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNYXJrZG93bih7IGNvbnRlbnQgfTogeyBjb250ZW50OiBzdHJpbmcgfSkge1xuICBjb25zdCBodG1sID0gUmVhY3QudXNlTWVtbygoKSA9PiByZW5kZXJNYXJrZG93bihjb250ZW50KSwgW2NvbnRlbnRdKVxuICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJwcm9zZSBwcm9zZS1pbnZlcnQgdGV4dC1zbSBtYXgtdy1ub25lXCIgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBodG1sIH19IC8+XG59XG5cblxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiZXNjYXBlSHRtbCIsImlucHV0IiwicmVwbGFjZSIsInJlbmRlck1hcmtkb3duIiwibWQiLCJjb2RlQmxvY2tzIiwicHJlIiwiX20iLCJsYW5nIiwiY29kZSIsImlkeCIsInB1c2giLCJzYWZlIiwibGluZXMiLCJzcGxpdCIsIm91dCIsImluTGlzdCIsImZsdXNoTGlzdCIsInJhdyIsImxpbmUiLCJ0cmltRW5kIiwic3RhcnRzV2l0aCIsInNsaWNlIiwiaXRlbSIsInR4dCIsImh0bWwiLCJqb2luIiwiaSIsImIiLCJOdW1iZXIiLCJjb2RlRXNjYXBlZCIsIk1hcmtkb3duIiwiY29udGVudCIsInVzZU1lbW8iLCJkaXYiLCJjbGFzc05hbWUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/markdown.tsx\n"));

/***/ })

});